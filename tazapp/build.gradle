def supportLibVer = "25.1.1"
def buildToolsVer = "25.0.1"
def compileSdkVer = 25
def targetSdkVer = 25
def minSdkVer = 15

def versionCodeInt = 52
def versionNamePrefix = "3.0."

def tazPlist = '"http://dl.taz.de/tpaperIssue.plist"'
def tazPlistArchiv = '"http://dl.taz.de/tpaperIssue.plist?start=%1$s&end=%2$s"'
def tazStagingPlist = '"http://dl.taz.de/tpaperIssueTest.plist"'
def tazStagingPlistArchiv = '"http://dl.taz.de/tpaperIssueTest.plist?start=%1$s&end=%2$s"'
def tazAboUrl = '"https://www.taz.de/zeitung/abo/digitales-abo/apaper"'
def tazCheckLogin = '"https://dl.taz.de/digiAboCheckLogin"'
def tazResourceUrl = '"https://dl.taz.de/ressourcen"'
def tazArchiveUrl = '"https://dl.taz.de/tpaperArchiv"'

def lmdPlist = '"http://dl.monde-diplomatique.de/tpaperIssue.plist"'
def lmdPlistArchiv = '"http://dl.monde-diplomatique.de/tpaperIssue.plist?start=%1$s&end=%2$s"'
def lmdStagingPlist = '"http://dl.monde-diplomatique.de/tpaperIssueTest.plist"'
def lmdStagingPlistArchiv = '"http://dl.monde-diplomatique.de/tpaperIssueTest.plist?start=%1$s&end=%2$s"'
def lmdAboUrl = '"https://dl.monde-diplomatique.de/zeitung/abo/digitales-abo/apaper"'
def lmdCheckLogin = '"https://dl.monde-diplomatique.de/digiAboCheckLogin"'
def lmdResourceUrl = '"https://dl.monde-diplomatique.de/ressourcen"'
def lmdArchiveUrl = '"https://dl.monde-diplomatique.de/tpaperArchiv"'


def plistUrl = "PLISTURL"
def plistArchiveUrl = "PLISTARCHIVURL"
def aboUrl = "ABOURL"
def checkLoginUrl = "CHECKLOGINURL"
def resourceUrl = "RESOURCEURL"
def archiveUrl = "ARCHIVEURL"

apply plugin: 'idea'

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

apply plugin: 'android-sdk-manager'
apply plugin: 'com.android.application'
apply plugin: 'com.github.gfx.ribbonizer'

def overheadPath

File tcLocalPropsFile = project.rootProject.file('tc_local.properties')
if (tcLocalPropsFile.exists()) {
    logger.quiet('Found ' + tcLocalPropsFile)
    def tcLocalProps = new Properties()
    tcLocalProps.load(tcLocalPropsFile.newDataInputStream())
    overheadPath = tcLocalProps.getProperty("overheadpath")
} else {
    logger.error('tc_local.properties not found')
}

if (overheadPath == null) {
    overheadPath = System.getenv("overheadpath")
}

if (overheadPath != null) {
    logger.quiet('Found ' + ":" + overheadPath)
    project.ext.set("overheadPath", overheadPath)
    File extraGradleFile = new File(overheadPath, project.name + ".gradle")
    if (extraGradleFile.exists()) {
        logger.quiet('Found ' + extraGradleFile)
        apply from: extraGradleFile
    } else {
        logger.error(extraGradleFile + " not found")
    }
} else {
    logger.error('overheadpath not set')
}

android {
    useLibrary 'org.apache.http.legacy'
    compileSdkVersion compileSdkVer
    buildToolsVersion buildToolsVer
    defaultConfig {
        minSdkVersion minSdkVer
        targetSdkVersion targetSdkVer
        versionCode versionCodeInt
        versionName versionNamePrefix + versionCode
//        buildConfigField 'String', 'ACRA_FORM_URI', '""'
//        buildConfigField 'String', 'ACRA_FORM_URI_BASIC_AUTH_LOGIN', '""'
//        buildConfigField 'String', 'ACRA_FORM_URI_BASIC_AUTH_PASSWORD', '""'
    }
    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
    lintOptions {
        abortOnError false
    }
    buildTypes {
        debug {
            debuggable true
            versionNameSuffix "_debug"
            applicationIdSuffix ".debug"
        }
        staging.initWith(buildTypes.debug)
        staging {
            versionNameSuffix "_staging"
            applicationIdSuffix ".staging"
        }
        release {
            zipAlignEnabled true
            minifyEnabled true
            shrinkResources true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }

    // If you want the right .apk to be served, there is only one rule to follow here:
    // x86 version number > ARMv7 version number > ARMv5 version number
    // http://ph0b.com/improving-x86-support-of-android-apps-libs-engines/#ArchDependentAPKs

    flavorDimensions "owner", "abi"

    productFlavors {
        taz {
            applicationId "de.thecode.android.tazreader"
            dimension "owner"
            resValue 'string', 'app_name', 'taz.app'
            buildConfigField 'String', plistUrl, tazPlist
            buildConfigField 'String', plistArchiveUrl, tazPlistArchiv
            buildConfigField 'String', aboUrl, tazAboUrl
            buildConfigField 'String', checkLoginUrl, tazCheckLogin
            buildConfigField 'String', resourceUrl, tazResourceUrl
            buildConfigField 'String', archiveUrl, tazArchiveUrl
        }
        lmd {
            applicationId "de.thecode.lmd"
            dimension "owner"
            resValue 'string', 'app_name', 'LMd'
            buildConfigField 'String', plistUrl, lmdPlist
            buildConfigField 'String', plistArchiveUrl, lmdPlistArchiv
            buildConfigField 'String', aboUrl, lmdAboUrl
            buildConfigField 'String', checkLoginUrl, lmdCheckLogin
            buildConfigField 'String', resourceUrl, lmdResourceUrl
            buildConfigField 'String', archiveUrl, lmdArchiveUrl

        }
        x86 {
            dimension "abi"
            versionCode Integer.parseInt("6" + defaultConfig.versionCode)
            versionName defaultConfig.versionName + "_x86"

            ndk {
                abiFilter "x86"
            }
        }
        mips {
            dimension "abi"
            versionCode Integer.parseInt("4" + defaultConfig.versionCode)
            versionName defaultConfig.versionName + "_mips"
            ndk {
                abiFilter "mips"
            }
        }
        armv7 {
            dimension "abi"
            versionCode Integer.parseInt("2" + defaultConfig.versionCode)
            versionName defaultConfig.versionName + "_armv7"
            ndk {
                abiFilter "armeabi-v7a"
            }
        }
        arm {
            dimension "abi"
            versionCode Integer.parseInt("1" + defaultConfig.versionCode)
            versionName defaultConfig.versionName + "_arm"
            ndk {
                abiFilter "armeabi"
            }
        }
        fat {
            dimension "abi"
            versionCode Integer.parseInt("9" + defaultConfig.versionCode)
            versionName defaultConfig.versionName + "_fat"
        }
    }

    applicationVariants.all { variant ->
        def appName = variant.mergedFlavor.resValues.get('app_name').getValue()
        appName = "${appName}"
        if (!variant.buildType.name.equalsIgnoreCase("release")) {
            appName += " " + variant.buildType.name.toUpperCase()
        }
        variant.resValue 'string', 'app_name', appName
        if (variant.buildType.name.equalsIgnoreCase("staging")) {
            variant.getProductFlavors().each { flavor ->
                if (flavor.name.equalsIgnoreCase('taz')) {
                    variant.buildConfigField 'String', plistUrl, tazStagingPlist
                    variant.buildConfigField 'String', plistArchiveUrl, tazStagingPlistArchiv
                } else if (flavor.name.equalsIgnoreCase('lmd')) {
                    variant.buildConfigField 'String', plistUrl, lmdStagingPlist
                    variant.buildConfigField 'String', plistArchiveUrl, lmdStagingPlistArchiv
                }

            }
        }
    }

    variantFilter { variant ->
        variant.getFlavors().each { flavor ->
            if (!variant.buildType.name.equals('release')) {
                if (flavor.dimension.equalsIgnoreCase('abi') && (flavor.name.equalsIgnoreCase('arm') || flavor.name.equalsIgnoreCase('mips'))) {
                    variant.setIgnore(true)
                }
            }
            if (variant.buildType.name.equalsIgnoreCase('staging') && flavor.dimension.equalsIgnoreCase('owner') && flavor.name.equalsIgnoreCase('lmd')) {
                variant.setIgnore(true)
            }
        }
    }
}

def buildConfigAndResStringField(variant, name, value) {
    variant.resValue 'string', name.toLowerCase(), value
    variant.buildConfigField 'String', name, "\"$value\""
}

afterEvaluate {
    android.applicationVariants.all { variant ->
        variant.resValue 'string', 'application_id', variant.applicationId
        buildConfigAndResStringField variant, "CONTENT_AUTHORITY", variant.applicationId + ".provider"
        buildConfigAndResStringField variant, "STREAM_CONTENT_AUTHORITY", variant.applicationId + ".streamprovider"
    }
}

repositories {
    maven { url "https://s3.amazonaws.com/repo.commonsware.com" }
    maven { url 'https://maven.fabric.io/public' }
}

dependencies {
    compile "com.android.support:appcompat-v7:$supportLibVer"
    compile "com.android.support:recyclerview-v7:$supportLibVer"
    compile "com.android.support:design:$supportLibVer"
    compile "com.android.support:support-v4:$supportLibVer"
    compile "com.android.support:cardview-v7:$supportLibVer"

    compile 'com.android.volley:volley:1.0.0'
    compile 'com.squareup.okhttp3:okhttp:3.4.1'

    compile 'com.googlecode.plist:dd-plist:1.8'
    compile 'com.google.guava:guava:18.0'
    compile 'com.commonsware.cwac:provider:0.2.3'
    compile 'de.greenrobot:eventbus:2.4.0'

    debugCompile 'com.facebook.stetho:stetho:1.4.1'
    debugCompile 'com.facebook.stetho:stetho-js-rhino:1.4.1'
    debugCompile 'com.facebook.stetho:stetho-okhttp3:1.4.1'
    stagingCompile 'com.facebook.stetho:stetho:1.4.1'
    stagingCompile 'com.facebook.stetho:stetho-js-rhino:1.4.1'
    stagingCompile 'com.facebook.stetho:stetho-okhttp3:1.4.1'

    compile 'com.github.jrejaud:ViewPagerIndicator2:0.0.1'
    compile 'org.apache.commons:commons-lang3:3.4'
    compile 'commons-io:commons-io:2.4'
    compile 'org.slf4j:slf4j-api:1.7.21'
    compile 'com.github.tony19:logback-android-core:1.1.1-6'
    compile('com.github.tony19:logback-android-classic:1.1.1-6') {
        exclude group: 'com.google.android', module: 'android'
    }
    compile 'uk.co.chrisjenx:calligraphy:2.1.0'
    compile 'com.yqritc:recyclerview-flexibledivider:1.2.9'
    compile 'com.gitlab.matecode:androiddialog:1.2.29'

    compile 'com.scottyab:aescrypt:0.0.1'
    //compile 'ch.acra:acra:4.9.2'
}
