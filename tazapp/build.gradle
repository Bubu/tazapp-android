apply plugin: 'idea'

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'android-sdk-manager'
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

def overheadPath

File tcLocalPropsFile = project.rootProject.file('tc_local.properties')
if (tcLocalPropsFile.exists()) {
    logger.quiet('Found ' + tcLocalPropsFile)
    def tcLocalProps = new Properties()
    tcLocalProps.load(tcLocalPropsFile.newDataInputStream())
    overheadPath = tcLocalProps.getProperty("overheadpath")
} else {
    logger.error('tc_local.properties not found')
}

if (overheadPath == null) {
    overheadPath = System.getenv("overheadpath")
}

if (overheadPath != null) {
    logger.quiet('Found ' + ":" + overheadPath)
    project.ext.set("overheadPath", overheadPath)
    File extraGradleFile = new File(overheadPath, project.name + ".gradle")
    if (extraGradleFile.exists()) {
        logger.quiet('Found ' + extraGradleFile)
        apply from: extraGradleFile
    } else {
        logger.error(extraGradleFile + " not found")
    }
} else {
    logger.error('overheadpath not set')
}

ext {
    supportLibVersion = '23.2.0'
}

android {
    compileSdkVersion 23
    buildToolsVersion '23.0.2'
    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 23
        versionCode 52
        versionName "3.0." + versionCode
    }
    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
    lintOptions {
        abortOnError false
    }
    buildTypes {
        debug {
            ext.enableCrashlytics = false
            debuggable true
            versionNameSuffix "_debug"
            applicationIdSuffix ".debug"
        }
        release {
            zipAlignEnabled true
            minifyEnabled true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }

    // If you want the right .apk to be served, there is only one rule to follow here:
    // x86 version number > ARMv7 version number > ARMv5 version number
    // http://ph0b.com/improving-x86-support-of-android-apps-libs-engines/#ArchDependentAPKs

    flavorDimensions "owner","abi"

    productFlavors {
        taz {
            applicationId "de.thecode.android.tazreader"
            dimension "owner"
            resValue 'string', 'app_name', 'taz.app'
        }
        lmd {
            applicationId "de.thecode.lmd"
            dimension "owner"
            resValue 'string', 'app_name', 'LE MONDE diplomatique'
        }
        x86 {
            dimension "abi"
            versionCode Integer.parseInt("6" + defaultConfig.versionCode)
            versionName defaultConfig.versionName + "_x86"

            ndk {
                abiFilter "x86"
            }
        }
        mips {
            dimension "abi"
            versionCode Integer.parseInt("4" + defaultConfig.versionCode)
            versionName defaultConfig.versionName + "_mips"
            ndk {
                abiFilter "mips"
            }
        }
        armv7 {
            dimension "abi"
            versionCode Integer.parseInt("2" + defaultConfig.versionCode)
            versionName defaultConfig.versionName + "_armv7"
            ndk {
                abiFilter "armeabi-v7a"
            }
        }
        arm {
            dimension "abi"
            versionCode Integer.parseInt("1" + defaultConfig.versionCode)
            versionName defaultConfig.versionName + "_arm"
            ndk {
                abiFilter "armeabi"
            }
        }
        fat {
            dimension "abi"
            versionCode Integer.parseInt("9" + defaultConfig.versionCode)
            versionName defaultConfig.versionName + "_fat"
        }
    }

    applicationVariants.all { variant ->
        def appName = variant.mergedFlavor.resValues.get('app_name').getValue()
        appName = "${appName}"
        if(variant.buildType.name == "debug") {
            appName += " DEBUG"
        }
        variant.resValue 'string', 'app_name', appName
    }
}

def buildConfigAndResStringField(variant, name, value) {
    variant.resValue 'string', name.toLowerCase(), value
    variant.buildConfigField 'String', name, "\"$value\""
}

afterEvaluate {
    android.applicationVariants.all { variant ->
        variant.resValue 'string', 'application_id', variant.applicationId
        buildConfigAndResStringField variant, "ACCOUNT_TYPE", variant.applicationId
        buildConfigAndResStringField variant, "CONTENT_AUTHORITY", variant.applicationId + ".provider"
        buildConfigAndResStringField variant, "STREAM_CONTENT_AUTHORITY", variant.applicationId + ".streamprovider"
    }
}

repositories {
    maven { url "https://repo.commonsware.com.s3.amazonaws.com" }
    maven { url 'https://maven.fabric.io/public' }
}

dependencies {
    compile "com.android.support:appcompat-v7:${supportLibVersion}"
    compile "com.android.support:recyclerview-v7:${supportLibVersion}"
    compile "com.android.support:design:${supportLibVersion}"
    compile "com.android.support:support-v4:${supportLibVersion}"
    compile "com.android.support:cardview-v7:${supportLibVersion}"
    compile 'com.mcxiaoke.volley:library:1.0.19'
    compile 'com.googlecode.plist:dd-plist:1.8'
    compile 'com.google.guava:guava:18.0'
    compile 'com.commonsware.cwac:provider:0.2.3'
    compile 'de.greenrobot:eventbus:2.4.0'
    compile('com.crashlytics.sdk.android:crashlytics:2.5.2@aar') {
        transitive = true;
    }
    debugCompile 'com.facebook.stetho:stetho:1.0.0'
    compile 'fr.avianey.com.viewpagerindicator:library:2.4.1@aar'
    compile 'org.apache.commons:commons-lang3:3.4'
    compile 'commons-io:commons-io:2.4'
    compile 'org.slf4j:slf4j-api:1.7.12'
    compile 'com.github.tony19:logback-android-core:1.1.1-4'
    compile 'com.github.tony19:logback-android-classic:1.1.1-4'
    compile 'uk.co.chrisjenx:calligraphy:2.1.0'
}
